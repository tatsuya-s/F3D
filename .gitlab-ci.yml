########## Stages ##########

stages:
  - deps # Empty for linux
  - configure
  - build
  - test # Empty for vtk9
  - package # Empty for vtk9

########## OS specific tags and variables ##########

.linux:
  tags:
    - docker
    - linux
    - x11

.linux_docker_vtk:
  extends:
    - .linux
  image: gitlab.kitware.com:4567/f3d/f3d/linux/vtk:latest

.linux_docker_vtk9:
  extends:
    - .linux
  image: gitlab.kitware.com:4567/f3d/f3d/linux/vtk:9.0.1

.linux_empty:
  script:
    - [ "true" ]
  extends:
    - .linux

.windows:
  variables:
    GIT_CLONE_PATH: "$CI_BUILDS_DIR\\f3d-ci"
  tags:
    - windows
    - f3d
    - nemesis

.windows_env:
  before_script:
    - $CMAKEPath = Join-Path -Path $pwd -ChildPath dependencies\cmake-3.19.3-win64-x64\bin\
    - $NSISPath = Join-Path -Path $pwd -ChildPath dependencies\nsis-3.06.1\Bin\
    - $NinjaPath =  Join-Path -Path $pwd -ChildPath dependencies\
    - $env:Path += ";$NinjaPath;$NSISPath;$CMAKEPath"

.windows_empty:
  script:
    - $true
  extends:
    - .windows

.macos:
  variables:
    GIT_CLONE_PATH: "$CI_BUILDS_DIR\\f3d-ci"
    DEVELOPER_DIR: "/Applications/Xcode-11.7.app/Contents/Developer"
  tags:
    - macos
    - xcode-11.7
    - f3d

.macos_env:
  before_script:
    - export PATH=$(pwd)/dependencies/cmake-3.19.4-macos-universal/CMake.app/Contents/bin/:$PATH

.macos_empty:
  script:
    - [ "true" ]
  extends:
    - .macos

########## Cross-platform scripts ##########

.conf:
  stage: configure
  script:
    - mkdir build
    - cd build
    - cmake $BUILD_ARCHITECTURE $ADDITIONAL_OPTIONS $RUNTIME_OPTION $POLICY_OPTION
      -DBUILD_TESTING=ON -DF3D_STRICT_BUILD=ON
      -DCMAKE_BUILD_TYPE=Release -DVTK_DIR:FILEPATH=$VTK_DIR
      -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE=ON ..

.build:
  stage: build
  script:
    - cd build
    - cmake --build . --config Release --parallel 8

.test:
  stage: test
  script:
    - cd build
    - ctest -C Release -j 8 --output-on-failure
  artifacts:
    when: on_failure
    paths:
      - build/Test*.png

.pack:
  stage: package
  script:
    - cd build
    - cpack -C Release

########## Linux Specific ##########

### Deps Linux ###

.deps:linux:
  stage: deps
  extends:
    - .linux_empty

deps:linux:vtk9:
  extends:
    - .deps:linux

deps:linux:
  extends:
    - .deps:linux

### Conf Linux ###

.conf:linux:
  extends:
    - .conf
  variables:
    ADDITIONAL_OPTIONS: -DF3D_INSTALL_DEFAULT_CONFIGURATION_FILE_IN_PREFIX=ON
    VTK_DIR: /vtk/vtk_install/lib/cmake/vtk-9.0
  artifacts:
    paths:
      - build

conf:linux:vtk9:
  extends:
    - .conf:linux
    - .linux_docker_vtk9
  dependencies:
    - deps:linux:vtk9
  needs:
    - deps:linux:vtk9

conf:linux:
  extends:
    - .conf:linux
    - .linux_docker_vtk
  dependencies:
    - deps:linux
  needs:
    - deps:linux

### Build Linux ###

.build:linux:
  extends:
    - .build
  artifacts:
    paths:
      - build

build:linux:vtk9:
  extends:
    - .build:linux
    - .linux_docker_vtk9
  dependencies:
    - conf:linux:vtk9
  needs:
    - conf:linux:vtk9

build:linux:
  extends:
    - .build:linux
    - .linux_docker_vtk
  dependencies:
    - conf:linux
  needs:
    - conf:linux

### Test Linux ###

test:linux:vtk9:
  stage: test
  extends:
    - .linux_empty
  needs:
    - build:linux:vtk9

test:linux:
  extends:
    - .linux
    - .test
    - .linux_docker_vtk
  dependencies:
    - build:linux
  needs:
    - build:linux
  artifacts:
    paths:
      - build

### Pack Linux ###

pack:linux:vtk9:
  stage: package
  extends:
    - .linux_empty
  needs:
    - build:linux:vtk9

pack:linux:
  extends:
    - .linux
    - .pack
    - .linux_docker_vtk
  dependencies:
    - build:linux
  needs:
    - build:linux
  artifacts:
    paths:
      - build/f3d-*.tar.gz
      - build/f3d-*.tar.xz

########## Windows Specific ##########

### Deps Windows ###

.deps:win:
  stage: deps
  script:
    - $env:GIT_LFS_SKIP_SMUDGE="1"
    - git clone https://gitlab.kitware.com/f3d/f3d-dependencies.git
    - cd f3d-dependencies
    - git lfs pull --include "windows/archive/nsis-3.06.1.zip"
    - git lfs pull --include "windows/archive/$VTK_ARCHIVE"
    - cd ..\
    - $ProgressPreference = 'SilentlyContinue'
    - Invoke-WebRequest https://github.com/Kitware/CMake/releases/download/v3.19.3/cmake-3.19.3-win64-x64.zip -OutFile .\cmake-3.19.3-win64-x64.zip 
    - $CmakeHash = (Get-FileHash .\cmake-3.19.3-win64-x64.zip -Algorithm MD5).Hash
    - $CmakeHash -eq "6bbe95ee440c42ddd249f356d3ebd056"
    - Invoke-WebRequest https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip -OutFile .\ninja-win.zip 
    - $NinjaHash = (Get-FileHash .\ninja-win.zip -Algorithm MD5).Hash
    - $NinjaHash -eq "8DAD6A63141D57AAE277E68EF7658CA1"
    - mkdir dependencies
    - cd dependencies
    - tar -xf ..\cmake-3.19.3-win64-x64.zip
    - cmake -E tar -x ../ninja-win.zip
    - cmake -E tar -x ../f3d-dependencies/windows/archive/nsis-3.06.1.zip
    - cmake -E tar -x ../f3d-dependencies/windows/archive/$VTK_ARCHIVE
  extends:
    - .windows
    - .windows_env
  artifacts:
    paths:
      - dependencies

deps:win:
  extends:
    - .deps:win
  variables:
    VTK_ARCHIVE: vtk-latest.zip

deps:win:vtk9:
  extends:
    - .deps:win
  variables:
    VTK_ARCHIVE: vtk-9.0.1.zip

### Configure Windows ###

.conf:win:
  extends:
    - .conf
    - .windows
    - .windows_env
  variables:
    BUILD_ARCHITECTURE: -GNinja #TODO
    ADDITIONAL_OPTIONS: -DWINDOWS_BUILD_WIN32=ON -DCMAKE_SYSTEM_VERSION=10.0.19042
    POLICY_OPTION: -DCMAKE_POLICY_DEFAULT_CMP0091=NEW
    RUNTIME_OPTION: -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
    VTK_DIR: ..\dependencies\vtk_install\lib\cmake\vtk-9.0\
  artifacts:
    paths:
      - dependencies
      - build

conf:win:
  extends:
    - .conf:win
  dependencies:
    - deps:win
  needs:
    - deps:win

conf:win:vtk9:
  extends:
    - .conf:win
  dependencies:
    - deps:win:vtk9
  needs:
    - deps:win:vtk9

### Build Windows ###

.build:win:
  extends:
    - .windows
    - .windows_env
    - .build
  dependencies:
    - configure:win
  needs:
    - configure:win

build:win:
  extends:
    - .build:win
  dependencies:
    - conf:win
  needs:
    - conf:win
  artifacts:
    paths:
      - dependencies
      - build

build:win:vtk9:
  extends:
    - .build:win
  dependencies:
    - conf:win:vtk9
  needs:
    - conf:win:vtk9

### Test Windows ###

test:win:
  extends:
    - .windows
    - .windows_env
    - .test
  dependencies:
    - build:win
  needs:
    - build:win

test:win:vtk9:
  stage: test
  extends:
    - .windows_empty
  needs:
    - build:win:vtk9

### Package Windows ###

pack:win:
  extends:
    - .windows
    - .windows_env
    - .pack
  dependencies:
    - build:win
  needs:
    - build:win
  artifacts:
    paths:
      - build/f3d-*.zip
      - build/f3d-*.exe

pack:win:vtk9:
  stage: package
  extends:
    - .windows_empty
  needs:
    - build:win:vtk9

########## MacOS Specific ##########

### Deps MacOS ###

.deps:macos:
  stage: deps
  script:
    - mkdir dependencies
    - GIT_LFS_SKIP_SMUDGE=1 git clone https://gitlab.kitware.com/f3d/f3d-dependencies
    - cd f3d-dependencies
    - git lfs pull --include "macos/archive/$VTK_ARCHIVE"
    - cd ../
    - tar -zxf f3d-dependencies/macos/archive/$VTK_ARCHIVE -C ./dependencies
    - cd dependencies
    - curl -OL https://github.com/Kitware/CMake/releases/download/v3.19.4/cmake-3.19.4-macos-universal.tar.gz
    - echo "eb1f52996632c1e71a1051c9e2c30cc8df869fb5a213b1a0d3b202744c6c5758  cmake-3.19.4-macos-universal.tar.gz" | shasum -a 256 --check
    - tar -zxf cmake-3.19.4-macos-universal.tar.gz
  extends:
    - .macos
  artifacts:
    paths:
      - dependencies

deps:macos:
  extends:
    - .deps:macos
  variables:
    VTK_ARCHIVE: vtk-latest.tar.gz

deps:macos:vtk9:
  extends:
    - .deps:macos
  variables:
    VTK_ARCHIVE: vtk-9.0.1.tar.gz

### Configure MacOS ###

.conf:macos:
  extends:
    - .macos
    - .macos_env
    - .conf
  variables:
    ADDITIONAL_OPTIONS: -DMACOSX_BUILD_BUNDLE=ON
    VTK_DIR: dependencies\vtk_install\lib\cmake\vtk-9.0\ # this should be ../dependencies, TODO understand
  artifacts:
    paths:
      - dependencies
      - build

conf:macos:
  extends:
    - .conf:macos
  dependencies:
    - deps:macos
  needs:
    - deps:macos

conf:macos:vtk9:
  extends:
    - .conf:macos
  dependencies:
    - deps:macos:vtk9
  needs:
    - deps:macos:vtk9

### Build MacOS ###

.build:macos:
  extends:
    - .macos
    - .macos_env
    - .build

build:macos:
  extends:
    - .build:macos
  dependencies:
    - conf:macos
  needs:
    - conf:macos
  artifacts:
    paths:
      - dependencies
      - build

build:macos:vtk9:
  extends:
    - .build:macos
  dependencies:
    - conf:macos:vtk9
  needs:
    - conf:macos:vtk9

### Test MacOS ###

test:macos:
  extends:
    - .macos
    - .macos_env
    - .test
  dependencies:
    - build:macos
  needs:
    - build:macos

test:macos:vtk9:
  stage: test
  extends:
    - .macos_empty
  needs:
    - build:macos:vtk9

### Package MacOS ###

pack:macos:
  extends:
    - .macos
    - .macos_env
    - .pack
  dependencies:
    - build:macos
  needs:
    - build:macos
  artifacts:
    paths:
      - build/f3d-*.dmg

pack:macos:vtk9:
  stage: package
  extends:
    - .macos_empty
  needs:
    - build:macos:vtk9
